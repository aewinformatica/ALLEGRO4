M.U.G.E.N Tools - AirEditor 2000/07/31
(c) 1999-2000 Elecbyte
www.elecbyte.com

==========
AirEditor (previously known as AirViewer)
==========

This is a GUI based program and should work if MUGEN works on your
system.  

Probably the best way to get started with AirEditor is to load up
an existing character.  Choose File->Open and you'll have to load
the character's .sff file and then its .air file.

After that is done, you'll be able to browse through the sprites
and view the collision boxes and sprite X and Y axes.  


This version's changes
----------------------
- Configuration file added: data/airedit.cfg
  You can change video settings here.
- Supports 50% zoom level for sprite window. Useful only
  for very large sprites.


Navigating in AirEditor
-----------------------

Click on the left and right arrows next to the action and element
buttons in the right box to view your desired frames. To jump to
a particular action and element, click on the action or element
buttons and type in the number of the action/element you wish
to see.

To move the sprite around in its window, right-click on the
window, and drag your mouse around.

You can zoom in and out by clicking on the View menu, and
choosing the appropriate items.


Defining collision boxes
------------------------

There are two kinds of collision boxes used in M.U.G.E.N:  Clsn1
and Clsn2. Clsn2 boxes are blue and Clsn1 boxes show up as red.
Blue boxes define the character's dimensions and the red boxes 
indicate parts of the sprite that "attack." Note that just defining
red boxes in AirEditor does make a complete attack. You need to
define a HitDef for that attack in the CNS file.

There is a 2-step process to adding a set of boxes to your
existing AIR file:

Step 1: Define a set of boxes
Step 2: Save the boxes as either Clsn1 or Clsn2.

To define a single box, simple left-drag your mouse over the
desired area on the sprite window. This box is called the
"working box". To undefine the working box, click on the sprite
window again without dragging.

Once you have the working box ready, you can add it to the set
by clicking on one of the Save buttons at the bottom of the screen.

AirEditor lets you define up to 10 collision boxes per set, which
should be more than adequate. If you need more collision boxes
for any reason, you will have to manually add it to the AIR files
using a text editor.


HotKeys
-------
A   - Jump to action
X   - Toggle Show axes
1   - Toggle Show Clsn1
2   - Toggle Show Clsn2
+   - Zoom in
-   - Zoom out
F12 - Screenshot
Esc - Quit


Refreshing the screen
---------------------
If for some reason the graphics get messed up (either you hit the 
windows key or Alt-tab) press Ctrl-R to refresh the screen. The
colors might get changed (due to a program bug) but the functionality
should remain.


In case the Save feature does not work
--------------------------------------
This is an alternate method to get collision box information
from AirEditor.

Draw a box with the left mouse button and click one of the "save"
buttons at the bottom of the screen to make it stick to the character.
Draw the next box and press one of the other save buttons.  When
you're done, go to View->Info to see the box coordinates you drew.
To format the output that the .air file uses, press '1' or '2'.  '1' 
formats as Clsn1 boxes and '2' as Clsn2 boxes.  Finally press 'S'
to write these boxes out to a file.  Finally, use your favorite
text editor to cut and paste these coordinates into the .air file
directly above the frame you want.  See air.txt for more info
regarding .air files.  Once you pasted into the .air file and 
saved that file in your text editor, go to File->Reload to update
AirEditor.


====================
Distribution
====================

Please consult readme.txt for distribution policies.


====================
Disclaimer
====================

Elecbyte will not be held liable for any damages to either the user
or the system it is run on, that may occur as a direct or indirect
result of the use of this program.  